// default package
// Generated Feb 8, 2017 8:50:02 AM by Hibernate Tools 5.2.0.CR1
package main.java.model;
/**
 * Stock generated by hbm2java
 */
public class Stock implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int stockId;
	private Transaction transaction;
	private double price;
	private double previousPrice;
	private Double priceValueThreshold;
	private Double pricePercentageThreshold;

	public Stock() {
	}

	public Stock(int stockId, Transaction transaction, double price, double previousPrice) {
		this.stockId = stockId;
		this.transaction = transaction;
		this.price = price;
		this.previousPrice = previousPrice;
	}

	public Stock(int stockId, Transaction transaction, double price, double previousPrice, Double priceValueThreshold,
	        Double pricePercentageThreshold) {
		this.stockId = stockId;
		this.transaction = transaction;
		this.price = price;
		this.previousPrice = previousPrice;
		this.priceValueThreshold = priceValueThreshold;
		this.pricePercentageThreshold = pricePercentageThreshold;
	}

	public int getStockId() {
		return this.stockId;
	}

	public void setStockId(int stockId) {
		this.stockId = stockId;
	}

	public Transaction getTransaction() {
		return this.transaction;
	}

	public void setTransaction(Transaction transaction) {
		this.transaction = transaction;
	}

	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	public double getPreviousPrice() {
		return this.previousPrice;
	}

	public void setPreviousPrice(double previousPrice) {
		this.previousPrice = previousPrice;
	}

	public Double getPriceValueThreshold() {
		return this.priceValueThreshold;
	}

	public void setPriceValueThreshold(Double priceValueThreshold) {
		this.priceValueThreshold = priceValueThreshold;
	}

	public Double getPricePercentageThreshold() {
		return this.pricePercentageThreshold;
	}

	public void setPricePercentageThreshold(Double pricePercentageThreshold) {
		this.pricePercentageThreshold = pricePercentageThreshold;
	}

}
